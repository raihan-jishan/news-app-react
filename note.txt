// updat link 
https://www.youtube.com/watch?v=abjeWy4sZiU
* in youtube tutorial #34--  
* Life cycle method tutorial #LWS
https://www.youtube.com/watch?v=CzyspyBe7rk
// code 
import React, { Component } from "react";
import NewsItem from "./NewsItem";
import "../../css/gridList.css";
import Spinner from "../Loader/Spinner";
import PropTypes from "prop-types";
export default class News extends Component {
  //  default Props ... ..
  static defaultProps = {
    country: "us",
    pageSize: 5,
    category: "general",
  };
  // prop types
  static propTypes = {
    country: PropTypes.string,
    pageSize: PropTypes.number,
    category: PropTypes.string,
  };

  //  constructor fun
  constructor() {
    super();
    this.state = {
      articles: [],
      loading: false,
      page: 1,
    };
  }
  // updateNews 
  async updateNews() {
    const url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=0d2c0d3a6f2d4ac7997fbc950194ffbb&page=${this.state.page}
    &pageSize=${this.props.pageSize}`;
    // loading true
    this.setState({ loading: true });
    let data = await fetch(url);
    let parsedData = await data.json();
    console.log(parsedData);
    this.setState({
      articles: parsedData.articles,
      totalArticles: parsedData.tototalResults,
      loading: false,
    });
  }
  //  componnetDidmout
  async componentDidMount() {
    let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=0d2c0d3a6f2d4ac7997fbc950194ffbb&page=1&
    &pageSize=${this.props.pageSize}`;
    // loading true
    this.setState({ loading: true });
    let data = await fetch(url);
    let parsedData = await data.json();
    console.log(parsedData);
    this.setState({
      articles: parsedData.articles,
      totalArticles: parsedData.tototalResults,
      loading: false,
    });
  }

  // handlePrevClick func
  handlePrevClick = async () => {
    this.setState({page: this.state.page - 1})
    // initialize updateNews() func 
    this.updateNews(); 
  };
  // handleNextClick func
  handleNextClick = async () => {
   
    this.setState({page: this.state.page +1})
    // initialize updateNews() func 
    this.updateNews(); 
  };
  render() {
    return (
      <main className="main">
        <h1
          style={{
            textAlign: "center",
            fontWeight: "500",
            letterSpacing: "2px",
          }}
        >
          List Of The News{" "}
        </h1>
        {/*  spinner component */}
        {this.state.loading && <Spinner />}
        {/*  spinner component end */}
        <div className="container">
          <div className="newsItem">
            {!this.state.loading &&
              this.state.articles.map((element) => {
                return (
                  <div key={element.url}>
                    <div>
                      <NewsItem
                        title={element.title}
                        description={element.description}
                        imageUrl={element.urlToImage}
                        newsUrl={element.url}
                        author={element.author}
                        date={element.publishedAt}                      />
                    </div>
                  </div>
                );
              })}
          </div>
        </div>
        {/*  container */}
        <div className="flexContainer">
          <button
            disabled={this.state.page <= 1}
            className="preBtn"
            onClick={this.handlePrevClick}
          >
            &larr; Previus
          </button>
          <button
            disabled={
              this.state.page + 1 >
              Math.ceil(this.state.tototalResults / this.props.pageSize)
            }
            className="nextBtn"
            onClick={this.handleNextClick}
          >
            Next &rarr;
          </button>
        </div>
        {/*  container end  */}
      </main>
    );
  }
}


// last updated code 
import React, { Component } from "react";
import NewsItem from "./NewsItem";
import "../../css/gridList.css";
import Spinner from "../Loader/Spinner";
import PropTypes from "prop-types";
export default class News extends Component {
  //  default Props ... ..
  static defaultProps = {
    country: "us",
    pageSize: 5,
    category: "general",
  };
  // prop types
  static propTypes = {
    country: PropTypes.string,
    pageSize: PropTypes.number,
    category: PropTypes.string,
  };
  // capitalizeFirstLetter function
  capitalizeFirstLetter = (string) => {
    return string.charAt(0).toUpperCase() + string.slice(1);
  };
  //  constructor fun
  constructor(props) {
    super(props);
    this.state = {
      articles: [],
      loading: false,
      page: 1,
    };
    // select the element of URL and wrapped on UpperLetter function
    document.title = `${this.capitalizeFirstLetter(
      this.props.category
    )}- For news`;
  }
  // updateNews
  async updateNews() {
    const url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=0d2c0d3a6f2d4ac7997fbc950194ffbb&page=${this.state.page}
    &pageSize=${this.props.pageSize}`;
    // loading true
    this.setState({ loading: true });
    let data = await fetch(url);
    let parsedData = await data.json();
    this.setState({
      articles: parsedData.articles,
      totalArticles: parsedData.tototalResults,
      loading: false,
    });
  }
  //  componnetDidmout
  async componentDidMount() {
    this.updateNews();
  }

  // handlePrevClick func
  handlePrevClick = async () => {
    this.setState({ page: this.state.page - 1 });
    // initialize updateNews() func
    this.updateNews();
  };
  // handleNextClick func
  handleNextClick = async () => {
    this.setState({ page: this.state.page + 1 });
    // initialize updateNews() func
    this.updateNews();
  };
  render() {
    return (
      <main className="main">
        <h1
          style={{
            textAlign: "center",
            fontWeight: "500",
            letterSpacing: "2px",
          }}
        >
          List Of The News- {this.props.category}
        </h1>
        {/*  spinner component */}
        {this.state.loading && <Spinner />}
        {/*  spinner component end */}
        <div className="container">
          <div className="newsItem">
            {!this.state.loading &&
              this.state.articles.map((element) => {
                return (
                  <div key={element.url}>
                    <div>
                      <NewsItem
                        title={element.title}
                        description={element.description}
                        imageUrl={element.urlToImage}
                        newsUrl={element.url}
                        author={element.author}
                        date={element.publishedAt}
                      />
                    </div>
                  </div>
                );
              })}
          </div>
        </div>
        {/*  container */}
        <div className="flexContainer">
          <button
            disabled={this.state.page <= 1}
            className="preBtn"
            onClick={this.handlePrevClick}
          >
            &larr; Previus
          </button>
          <button
            disabled={
              this.state.page + 1 >
              Math.ceil(this.state.tototalResults / this.props.pageSize)
            }
            className="nextBtn"
            onClick={this.handleNextClick}
          >
            Next &rarr;
          </button>
        </div>
        {/*  container end  */}
      </main>
    );
  }
}
// last updat code 
import React, { Component } from "react";
import NewsItem from "./NewsItem";
import "../../css/gridList.css";
import Spinner from "../Loader/Spinner";
import PropTypes from "prop-types";
import InfiniteScroll from "react-infinite-scroll-component";
export default class News extends Component {
  //  default Props ... ..
  static defaultProps = {
    country: "us",
    pageSize: 5,
    category: "general",
  };
  // prop types
  static propTypes = {
    country: PropTypes.string,
    pageSize: PropTypes.number,
    category: PropTypes.string,
  };
  // capitalizeFirstLetter function
  capitalizeFirstLetter = (string) => {
    return string.charAt(0).toUpperCase() + string.slice(1);
  };
  //  constructor func
  constructor(props) {
    super(props);
    this.state = {
      articles: [],
      loading: false,
      page: 1,
      totalResults: 0,
    };
    // select the element of URL and wrapped on UpperLetter function
    document.title = `${this.capitalizeFirstLetter(
      this.props.category
    )}- For news`;
  }
  // updateNews
  async updateNews() {
    // props method 
    this.props.setProgress(10); 
    const url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=0d2c0d3a6f2d4ac7997fbc950194ffbb&page=${this.state.page}
    &pageSize=${this.props.pageSize}`;
    // loading true
    this.setState({ loading: true });
    let data = await fetch(url);
    this.props.setProgress(30)
    let parsedData = await data.json();
    this.props.setProgress(60)
    this.setState({
      articles: parsedData.articles,
      totalArticles: parsedData.tototalResults,
      loading: false,
    });
    this.props.setProgress(100); 
  }
  //  componnetDidmout
  async componentDidMount() {
    this.updateNews();
  }

  // handlePrevClick func
  handlePrevClick = async () => {
    this.setState({ page: this.state.page - 1 });
    // initialize updateNews() func
    this.updateNews();
  };
  // handleNextClick func
  handleNextClick = async () => {
    this.setState({ page: this.state.page + 1 });
    // initialize updateNews() func
    this.updateNews();
  };
  //  fetchMoreData
  fetchMoreData = async () => {
    this.setState({ page: this.state.page + 1 });
    const url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=0d2c0d3a6f2d4ac7997fbc950194ffbb&page=${this.state.page}
    &pageSize=${this.props.pageSize}`;
    // loading true
    this.setState({ loading: true });
    let data = await fetch(url);
    let parsedData = await data.json();
    this.setState({
      articles: this.state.articles.concat(parsedData.articles),
      totalResults: parsedData.totalResults,
      loading: false,
    });
  };
  render() {
    return (
      <main className="main">
        <h1
          style={{
            textAlign: "center",
            fontWeight: "500",
            letterSpacing: "2px",
          }}
        >
          List Of The News- {this.props.category}
        </h1>
        {/*  spinner component */}
        {this.state.loading && <Spinner />}
        {/*  spinner component end */}
        {/* InfinateScroll start there  */}
        <InfiniteScroll
          dataLength={this.state.articles.length}
          next={this.fetchMoreData}
          hasMore={this.state.articles.length !== this.state.totalResults}
          loader={<Spinner />}
        >
          <div className="container">
            <div className="newsItem">
              {this.state.articles.map((element) => {
                return (
                  <div key={element.url}>
                    <div>
                      <NewsItem
                        title={element.title}
                        description={element.description}
                        imageUrl={element.urlToImage}
                        newsUrl={element.url}
                        author={element.author}
                        date={element.publishedAt}
                      />
                    </div>
                  </div>
                );
              })}
            </div>
          </div>
        </InfiniteScroll>
        {/*  InfinateScroll end there */}
      </main>
    );
  }
}
